{"version":3,"sources":["components/title/index.js","components/terminal/text.js","components/terminal/index.js","data.js","components/projects/timeline.js","components/projects/index.js","components/App.js","serviceWorker.js","index.js"],"names":["Title","className","style","color","href","target","rel","Text","useState","display","showText","setShowText","startDelay","speed","hideCursor","onFinishedTyping","Terminal","params","useSpring","marginTop","from","div","projects","title","tech","desc","source","live","demo","Timeline","data","map","x","contentStyle","background","contentArrowStyle","borderRight","iconStyle","Projects","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56a68492.chunk.js","sourcesContent":["import React from 'react';\r\nimport './title.scss';\r\n\r\nfunction Title() {\r\n  return (\r\n    <div>\r\n      <div className='banner'>\r\n        <div className='avatar' />\r\n        <h1>Filip Åhfelt</h1>\r\n      </div>\r\n\r\n      <div className='intro'>\r\n        <p style={{ color: '#434c5e' }}>\r\n          Hello, I'm Filip.\r\n          <br />\r\n          I'm a M.Sc. Student at Faculty of Engineering LTH. To keep in touch,\r\n          simply{' '}\r\n          <a className='link' href='mailto:filahf94@gmail.com'>\r\n            email\r\n          </a>{' '}\r\n          or add me on{' '}\r\n          <a\r\n            className='link'\r\n            href='https://www.linkedin.com/in/filip-ahfelt/'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            LinkedIn\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import Typing from \"react-typing-animation\";\r\nimport \"./text.scss\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Text() {\r\n  //show result after the typing is done\r\n  var [showText, setShowText] = useState({ display: \"none\" });\r\n  const hook = () => setShowText({ display: \"block\" });\r\n\r\n  return (\r\n    <div className='text'>\r\n      <Typing\r\n        startDelay={1000}\r\n        speed={80}\r\n        hideCursor='true'\r\n        onFinishedTyping={hook}\r\n      >\r\n        ./filip-ahfelt.sh\r\n      </Typing>\r\n      <div style={showText}>\r\n        <p>\r\n          <span className='projects'>> Current location:</span> \"Lund, Sweden\"\r\n          <br />\r\n          <span className='projects'>> Education:</span> \"M.Sc. Student at\r\n          Faculty of Engineering LTH\"\r\n          <br />\r\n          <span className='projects'>> Interests:</span> [\"Music\", \"Design\",\r\n          \"Nature\"]\r\n          <br />\r\n          <span className='projects'>> Skills:</span> [\"JavaScript\", \"Python\",\r\n          \"CSS\", \"React\", \"SQL\", \"GraphQL\", \"Node\"]\r\n          <br />\r\n          <span className='projects'>> Contact: </span>[\"\r\n          <a href='mailto:filahf94@gmail.com'>Email</a>\", \"\r\n          <a\r\n            href='https://www.linkedin.com/in/filip-ahfelt/'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            LinkedIn\r\n          </a>\r\n          \", \"\r\n          <a\r\n            href='https://github.com/filahf'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            Github\r\n          </a>\r\n          \"]\r\n          <br />\r\n          <span className='cursor'>&nbsp;</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport \"./terminal.scss\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Text from \"./text\";\r\n\r\nfunction Terminal() {\r\n  const params = useSpring({\r\n    marginTop: 0,\r\n    from: { marginTop: 200 }\r\n  });\r\n\r\n  return (\r\n    <animated.div style={params}>\r\n      <div>\r\n        <div className='terminal-head'>\r\n          <div className='min'></div>\r\n          <div className='max'></div>\r\n          <div className='close'></div>\r\n        </div>\r\n        <div className='card'>\r\n          <div className='text'>\r\n            <Text />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default Terminal;\r\n","export default {\r\n  projects: [\r\n    {\r\n      title: 'Personal Website',\r\n      tech: 'React.js, CSS, React Hooks',\r\n      desc: \"The website you're currently browsing!\",\r\n      source: 'https://github.com/filahf/portfolio',\r\n    },\r\n    {\r\n      title: 'Artificial Intelligence',\r\n      tech: 'Python',\r\n      desc:\r\n        'Various projects regarding AI implemented in Python. The projects include alpha–beta pruning, a Perceptron and robot localisation',\r\n      live: 'https://github.com/filahf/Artificial-Intelligence-EDAP01',\r\n    },\r\n    {\r\n      title: 'React Music Player',\r\n      tech: 'React.js, CSS, React Hooks',\r\n      desc:\r\n        'Barebone music player built with React. The purpose of the project was to get more familiar with the Web Audio API in HTML5',\r\n      source: 'https://github.com/filahf/react-music-player',\r\n      demo: 'https://filahf.github.io/react-music-player/',\r\n    },\r\n    {\r\n      title: 'Wevid.online',\r\n      tech: 'React.js, CSS, Express, Websockets',\r\n      desc:\r\n        'Synchronized YouTube player that let friends watch videos together regardless of geograpic location',\r\n      live: 'https://wevid.online/',\r\n      source: 'https://github.com/filahf/wevid-youtube-together',\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport './projects.scss';\r\nimport data from './../../data';\r\n\r\nfunction Timeline() {\r\n  return (\r\n    <VerticalTimeline>\r\n      {data.projects.map((x) => (\r\n        <VerticalTimelineElement\r\n          className='vertical-timeline-element--work'\r\n          contentStyle={{ background: '#434c5e', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid  #81a1c1' }}\r\n          iconStyle={{ background: '#a3be8c', color: '#fff' }}\r\n        >\r\n          <h3\r\n            className='vertical-timeline-element-title'\r\n            style={{ color: '#fff' }}\r\n          >\r\n            {x.title}\r\n          </h3>\r\n          <h4\r\n            className='vertical-timeline-element-subtitle'\r\n            style={{ color: '#81a1c1' }}\r\n          >\r\n            {x.tech}\r\n          </h4>\r\n          <p>{x.desc}</p>\r\n          {x.demo && (\r\n            <a href={x.demo} target='_blank' rel='noopener noreferrer'>\r\n              <button className='button button1'>Demo</button>\r\n            </a>\r\n          )}\r\n          {x.live && (\r\n            <a href={x.live} target='_blank' rel='noopener noreferrer'>\r\n              <button className='button button1'>Check it out!</button>\r\n            </a>\r\n          )}\r\n          {x.source && (\r\n            <a href={x.source} target='_blank' rel='noopener noreferrer'>\r\n              <button className='button button2'>Source</button>\r\n            </a>\r\n          )}\r\n        </VerticalTimelineElement>\r\n      ))}\r\n    </VerticalTimeline>\r\n  );\r\n}\r\n\r\nexport default Timeline;\r\n","import React from \"react\";\r\nimport \"./projects.scss\";\r\nimport Timeline from \"./timeline\";\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div>\r\n      <div className='title'>\r\n        <h2>Side Projects</h2>\r\n      </div>\r\n      <Timeline />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport Title from \"./title\";\r\nimport Terminal from \"./terminal\";\r\nimport Projects from \"./projects/\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='container'>\r\n      <Title />\r\n      <Terminal />\r\n      <Projects />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}